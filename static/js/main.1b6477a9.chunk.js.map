{"version":3,"sources":["ThemeContext.js","NavBar.js","Button.js","pages/ControlledFormPage.js","CounterButton.js","CongratulationsMessage.js","DisplayIf.js","pages/CounterButtonPage.js","usePersistentState.js","Greeting.js","pages/HomePage.js","pages/NotFoundPage.js","PeopleListItem.js","PeopleList.js","pages/PeopleListPage.js","pages/ProtectedPage.js","pages/UncontrolledFormPage.js","pages/UserProfilePage.js","useUserData.js","class-based/CounterButtonCB.js","class-based/CongratulationsMessageCB.js","class-based/CounterButtonPageCB.js","App.js","serviceWorker.js","index.js"],"names":["ThemeContext","React","createContext","NavBar","links","map","link","key","url","to","label","StyledButton","styled","button","props","buttonColor","Button","children","DangerButton","SuccessButton","ControlledFormPage","useState","name","setName","email","setEmail","favoriteColor","setFavoriteColor","type","placeholder","value","onChange","e","target","onClick","event","alert","preventDefault","CounterButton","numberOfClicks","onIncrement","CongratulationsMessage","threshold","onHide","DisplayIf","condition","CounterButtonPage","match","storageKey","defaultValue","Type","localStorage","getItem","state","setState","useEffect","setItem","usePersistentState","Number","setNumberOfClicks","hideMessage","setHideMessage","Greeting","numberOfMessages","greetingHeader","Date","getHours","HomePage","NotFoundPage","PeopleListItem","person","theme","useContext","style","backgroundColor","color","className","age","hairColor","Wrapper","div","PeopleList","people","PeopleListPage","ProtectedPage","history","useHistory","push","UncontrolledFormPage","nameInput","createRef","emailInput","favoriteColorInput","ref","current","UserProfilePage","user","setUser","a","fetch","response","json","data","results","fetchUser","useUserData","first","last","CounterButtonCB","this","Component","CongratulationsMessageCB","CounterButtonPageCB","increment","bind","appLinks","formLinks","App","Provider","path","exact","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1b6477a9.chunk.js","sourcesContent":["import React from 'react';\n\nexport const ThemeContext = React.createContext('dark');","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport const NavBar = ({ links }) => (\n    <ul>\n        {links.map(link => (\n            <li key={link.url}>\n                <Link to={link.url}>{link.label}</Link>\n            </li>\n        ))}\n    </ul>\n);","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledButton = styled.button`\n    background-color: ${props => props.buttonColor || 'transparent'};\n    border: 4px solid white;\n    border-radius: 4px;\n    color: white;\n    cursor: pointer;\n    font-size: 16px;\n    font-weight: bold;\n    margin: 8px;\n    outline: none;\n    padding: 16px;\n`;\n\nexport const Button = ({ children, buttonColor, ...props }) =>\n    <StyledButton buttonColor={buttonColor} {...props}>{children}</StyledButton>;\n\nexport const DangerButton = ({ children, ...props }) =>\n    <Button buttonColor=\"red\" {...props}>{children}</Button>;\n    \nexport const SuccessButton = ({ children, ...props }) =>\n    <Button buttonColor=\"green\" {...props}>{children}</Button>;\n\n// export class Button extends React.Component {\n//     constructor(props) {\n//         super(props);\n//         this.buttonColor = props.buttonColor;\n//     }\n\n//     render() {\n//         return (\n//             <StyledButton\n//                 buttonColor={this.buttonColor}\n//                 {...this.props}>\n//                     {this.props.children}\n//             </StyledButton>\n//         );\n//     }\n// }\n\n// export class DangerButton extends Button {\n//     constructor(props) {\n//         super(props);\n//         this.buttonColor = 'red';\n//     }\n// }","import React, { useState } from 'react';\nimport { SuccessButton } from '../Button';\n\nexport const ControlledFormPage = () => {\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [favoriteColor, setFavoriteColor] = useState('');\n\n    return (\n        <form>\n            <h3>Please enter your information:</h3>\n            <div>\n                <input\n                    type=\"text\"\n                    placeholder=\"Name\"\n                    value={name}\n                    onChange={(e) => setName(e.target.value)} />\n            </div>\n            <div>\n                <input\n                    type=\"text\"\n                    placeholder=\"Email\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)} />\n            </div>\n            <div>\n                <input\n                    type=\"text\"\n                    placeholder=\"Favorite color\"\n                    value={favoriteColor}\n                    onChange={(e) => setFavoriteColor(e.target.value)} />\n            </div>\n            <SuccessButton onClick={(event) => {\n                alert(`\n                    Your name is ${name},\n                    your email is ${email},\n                    and your favorite color is ${favoriteColor}!\n                `);\n                event.preventDefault();\n            }}>Submit</SuccessButton>\n        </form>\n    );\n}","import React from 'react';\nimport { DangerButton } from './Button';\n\nexport const CounterButton = ({ numberOfClicks, onIncrement }) => {\n\treturn (\n\t\t<>\n\t\t<p>You've clicked the button {numberOfClicks} times</p>\n\t\t<DangerButton onClick={onIncrement}>Click me!</DangerButton>\n\t\t</>\n\t);\n}\n","import React from 'react';\nimport { Button } from './Button';\n\nexport const CongratulationsMessage = ({ threshold, onHide }) => {\n    return (\n        <>\n            <h3>Congratulations! You've reached {threshold} clicks</h3>\n            <Button onClick={onHide}>Hide</Button>\n        </>\n    );\n}","import React from 'react';\n\nexport const DisplayIf = ({ condition, children }) => {\n    return condition\n        ? children\n        : null;\n}","import React, { useState } from 'react';\nimport { usePersistentState } from '../usePersistentState';\nimport { CounterButton } from '../CounterButton';\nimport { CongratulationsMessage } from '../CongratulationsMessage';\nimport { DisplayIf } from '../DisplayIf';\n\nexport const CounterButtonPage = ({ match }) => {\n  const [numberOfClicks, setNumberOfClicks] = usePersistentState(\n    'numberOfClicks',\n    0,\n    Number,\n  );\n  const [hideMessage, setHideMessage] = useState(false);\n\n  const increment = () => setNumberOfClicks(numberOfClicks + 1);\n\n  return (\n    <>\n    <h1>The Counter Button Page</h1>\n    <DisplayIf condition={!hideMessage && numberOfClicks >= 10}>\n        <CongratulationsMessage\n            threshold={10}\n            onHide={() => setHideMessage(true)} />\n    </DisplayIf>\n    <CounterButton\n        numberOfClicks={numberOfClicks}\n        onIncrement={increment} />\n    </>\n  );\n}","import { useState, useEffect } from 'react';\n\nexport const usePersistentState = (storageKey, defaultValue, Type) => {\n    const [state, setState] = useState(\n        Type(localStorage.getItem(storageKey)) || defaultValue\n    );\n\n    useEffect(() => {\n        localStorage.setItem(storageKey, state);\n    }, [state, storageKey]);\n\n    return [state, setState];\n}\n","import React from 'react';\n\nexport const Greeting = ({ name, numberOfMessages }) => {\n    if (!name) return null;\n    let isMorning = (new Date()).getHours() < 12;\n    let greetingHeader = isMorning\n        ? <h3>Good Morning {name}!</h3>\n        : <h3>Good Evening {name}!</h3>\n        \n    return (\n        <>\n            {greetingHeader}\n            {numberOfMessages === 0\n                ? null\n                : <p>You have {numberOfMessages} new messages</p>}\n        </>\n    );\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Greeting } from '../Greeting';\n\nexport const HomePage = () => (\n    <>\n    <h1>The Home Page</h1>\n    <Greeting name=\"Shaun\" numberOfMessages={10} />\n    <Link to=\"/counter\">Go to Counter Page</Link>\n    <Link to=\"/people-list\">Go to People List Page</Link>\n    </>\n);","import React from 'react';\n\nexport const NotFoundPage = () => (\n    <h1>404: Page Not Found</h1>\n);","import React, { useContext } from 'react';\nimport { ThemeContext } from './ThemeContext';\nimport './PeopleListItem.css';\n\nexport const PeopleListItem = ({ person }) => {\n    const theme = useContext(ThemeContext);\n    return (\n        <div\n            style={{\n                backgroundColor: theme === 'dark' ? 'black' :'#eee',\n                color: theme === 'dark' ? '#eee' : 'black',\n            }}\n            className=\"list-item-container\">\n            <h3>{person.name}</h3>\n            <p>Age: {person.age}</p>\n            <p>Hair Color: {person.hairColor}</p>\n        </div>\n    );\n}","import React from 'react';\nimport { PeopleListItem } from './PeopleListItem';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n    border: 2px solid white;\n    padding: 32px;\n`;\n\nexport const PeopleList = ({ people }) => (\n    <Wrapper>\n    {people.map(person => <PeopleListItem key={person.name} person={person} />)}\n    </Wrapper>\n);","import React from 'react';\nimport { PeopleList } from '../PeopleList';\n\nconst people = [{\n    name: 'John',\n    age: 40,\n    hairColor: 'brown',\n}, {\n    name: 'Helga',\n    age: 25,\n    hairColor: 'red',\n}, {\n    name: 'Dwayne',\n    age: 55,\n    hairColor: 'blonde',\n}];\n\nexport const PeopleListPage = () => (\n    <>\n    <h1>The People List Page</h1>\n    <PeopleList people={people} />\n    </>\n);","import React, { useEffect } from 'react';\n// import { Redirect } from 'react-router-dom';\nimport { useHistory } from 'react-router-dom';\n\nexport const ProtectedPage = () => {\n    const isAuthed = false;\n    const history = useHistory();\n\n    useEffect(() => {\n        if (!isAuthed) {\n            history.push('/');\n        }\n    });\n\n    return <h1>Only authed users should see this!</h1>;\n\n    // return isAuthed\n    //     ? <h1>Only authed users should see this!</h1>\n    //     : <Redirect to=\"/\" />;\n}","import React from 'react';\n\nexport const UncontrolledFormPage = () => {\n    const nameInput = React.createRef();\n    const emailInput = React.createRef();\n    const favoriteColorInput = React.createRef();\n\n    return (\n        <form>\n            <h3>Please enter your information:</h3>\n            <div>\n                <input\n                    ref={nameInput}\n                    type=\"text\"\n                    placeholder=\"Name\" />\n            </div>\n            <div>\n                <input\n                    ref={emailInput}\n                    type=\"text\"\n                    placeholder=\"Email\" />\n            </div>\n            <div>\n                <input\n                    ref={favoriteColorInput}\n                    type=\"text\"\n                    placeholder=\"Favorite color\" />\n            </div>\n            <button onClick={(event) => {\n                alert(`\n                    Your name is ${nameInput.current.value},\n                    your email is ${emailInput.current.value},\n                    and your favorite color is ${favoriteColorInput.current.value}!\n                `);\n                event.preventDefault();\n            }}>Submit</button>\n        </form>\n    );\n}","import React from 'react';\nimport { useUserData } from '../useUserData';\n\nexport const UserProfilePage = () => {\n    const user = useUserData();\n    return (\n        <div>\n            <h3>Name: {user.name.first} {user.name.last}</h3>\n            <p>Email: {user.email}</p>\n        </div>\n    );\n}","import { useState, useEffect } from 'react';\n\nexport const useUserData = () => {\n    const [user, setUser] = useState({ name: {} });\n\n    useEffect(() => {\n        const fetchUser = async () => {\n            const response = await fetch('https://randomuser.me/api/');\n            const data = await response.json();\n            setUser(data.results[0]);\n        }\n\n        fetchUser();\n    }, []);\n\n    return user;\n}","import React from 'react';\n\nexport class CounterButtonCB extends React.Component {\n    render() {\n        const { numberOfClicks, onIncrement } = this.props;\n        return (\n            <>\n            <p>You've clicked the button {numberOfClicks} times</p>\n            <button onClick={onIncrement}>Click me!</button>\n            </>\n        );\n    }\n}","import React from 'react';\n\nexport class CongratulationsMessageCB extends React.Component {\n    render() {\n        const { numberOfClicks, threshold, onHide } = this.props;\n\n        return numberOfClicks >= threshold\n            ? (\n            <>\n                <h3>Congratulations! You've reached {threshold} clicks</h3>\n                <button onClick={onHide}>Hide</button>\n            </>\n            ) : null;\n    }\n}\n","import React from 'react';\nimport { CounterButtonCB } from './CounterButtonCB';\nimport { CongratulationsMessageCB } from './CongratulationsMessageCB';\n\nexport class CounterButtonPageCB extends React.Component {\n    state = {\n        hideMessage: false,\n        numberOfClicks: 0,\n    }\n\n    constructor(props) {\n        super(props);\n        this.increment = this.increment.bind(this);\n    }\n\n    increment() {\n        this.setState({ numberOfClicks: this.state.numberOfClicks + 1})\n    }\n\n    render() {\n        const { hideMessage, numberOfClicks } = this.state;\n\n        return (\n            <>\n            <h1>The Counter Button Page</h1>\n            {hideMessage\n                ? null\n                : <CongratulationsMessageCB\n                    numberOfClicks={numberOfClicks}\n                    threshold={10}\n                    onHide={() => this.setState({ hideMessage: true })} />}\n            <CounterButtonCB\n                numberOfClicks={numberOfClicks}\n                onIncrement={this.increment} />\n            </>\n        );\n    }\n}","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { ThemeContext } from './ThemeContext';\nimport { NavBar } from './NavBar';\nimport {\n  ControlledFormPage,\n  HomePage,\n  CounterButtonPage,\n  NotFoundPage,\n  PeopleListPage,\n  ProtectedPage,\n  UncontrolledFormPage,\n  UserProfilePage,\n} from './pages';\nimport { UserDataLoader } from './UserDataLoader';\nimport { CounterButtonPageCB } from './class-based/CounterButtonPageCB';\nimport './App.css';\n\nconst appLinks = [\n  { url: '/', label: 'Home' },\n  { url: '/counter', label: 'Counter' },\n  { url: '/people-list', label: 'People List' },\n  { url: '/forms', label: 'Forms' },\n  { url: '/user', label: 'User Profile' },\n];\n\nconst formLinks = [\n  { url: '/forms/controlled', label: 'Controlled' },\n  { url: '/forms/uncontrolled', label: 'Uncontrolled' },\n];\n\nfunction App() {\n  return (\n    <ThemeContext.Provider value=\"light\">\n      <div className=\"App\">\n        <Router>\n          <NavBar links={appLinks} />\n          <div className=\"App-header\">\n            <Switch>\n              <Route path=\"/\" exact>\n                <HomePage />\n              </Route>\n              <Route path=\"/counter\">\n                <CounterButtonPage />\n              </Route>\n              <Route path=\"/people-list\">\n                <PeopleListPage />\n              </Route>\n              <Route path=\"/protected\">\n                <ProtectedPage />\n              </Route>\n              <Route path=\"/forms\">\n                <Router>\n                  <NavBar links={formLinks} />\n                  <Route path=\"/forms/controlled\">\n                    <ControlledFormPage />\n                  </Route>\n                  <Route path=\"/forms/uncontrolled\">\n                    <UncontrolledFormPage />\n                  </Route>\n                </Router>\n              </Route>\n              <Route path=\"/user\">\n                <UserProfilePage />\n              </Route>\n              <Route path=\"/class-based\">\n                <CounterButtonPageCB />\n              </Route>\n              <Route>\n                <NotFoundPage />\n              </Route>\n            </Switch>\n          </div>\n        </Router>\n      </div>\n    </ThemeContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}